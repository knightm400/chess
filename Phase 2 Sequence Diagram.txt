actor Client
participant Server
participant LoginService
participant LogoutService
participant ListGamesService
participant CreateGameService
participant JoinGameService
participant ClearService
participant DataAccess
database db

group #navy Registration #white
Client -> Server: [POST] /user\n{username, password, email}
Server -> RegistrationService: register(username, password, email)
RegistrationService -> DataAccess: getUser(username)
DataAccess -> db: SELECT username from user
DataAccess --> RegistrationService: null
RegistrationService -> DataAccess: createUser(username, password)
DataAccess -> db: INSERT INTO user (username, password, email) VALUES (username, password, email)
RegistrationService -> DataAccess: createAuth(username)
DataAccess -> db: INSERT INTO auth (username, authToken) VALUES (username, authToken)
DataAccess --> RegistrationService: authToken
RegistrationService --> Server: authToken
Server --> Client: 200\n{authToken}
end

group #orange Login #white
Client -> Server: [POST] /session\n{username, password}
Server -> LoginService: login(username, password)
LoginService -> DataAccess: validateUser(username, password)
DataAccess -> db: SELECT username, password FROM user
DataAccess --> LoginService: userExists
LoginService -> DataAccess: getAuth(username)
DataAccess -> db: SELECT authToken FROM auth WHERE username = username
DataAccess --> LoginService: authToken
LoginService --> Server: authToken
Server --> Client: 200\n{authToken}
end

group #green Logout #white
Client -> Server: [DELETE]  /session\n{authToken}
Server -> LogoutService: logout(authToken)
LogoutService -> DataAccess: removeAuth(authToken)
DataAccess -> db: DELETE FROM auth WHERE authToken = authToken
DataAccess --> LogoutService: success
LogoutService --> Server: success
Server --> Client: 200\n{message: "Logged out"}
end

group #red List Games #white
Client -> Server: [GET] /game\nauthToken
Server -> ListGamesService: listGames(authToken)
ListGamesService -> DataAccess: validateAuth(authToken)
DataAccess -> db: SELECT username FROM auth WHERE authToken = authToken
DataAccess --> ListGamesService: username
ListGamesService -> DataAccess: getGames()
DataAccess -> db: SELECT * FROM games
DataAccess --> ListGamesService: gamesList
ListGamesService --> Server: gamesList
Server --> Client: 200\n{gamesList}
end

group #purple Create Game #white
Client -> Server: [POST] /game\n{authToken, gameName}
Server -> CreateGameService: createGame(authToken, gameName)
CreateGameService -> DataAccess: validateAuth(authToken)
DataAccess -> db: SELECT username FROM auth WHERE authToken = authToken
DataAccess -->CreateGameService: username
CreateGameService -> DataAccess: createGame(username, gameName)
DataAccess -> db: INSERT INTO games (gameName, player) VALUES (gameName, username)
DataAccess --> CreateGameService: gameID
CreateGameService --> Server: gameID
Server --> Client: 200\n{gameID}
end

group #yellow Join Game #black
Client -> Server: [PUT] /game\n{authToken, gameID, clientColor}
Server -> JoinGameService: joinGame(authToken, gameID, clientColor)
JoinGameService -> DataAccess: validateAuth(authToken)
DataAccess -> db: SELECT username FROM auth WHERE authToken = authToken
DataAccess --> JoinGameService: username
JoinGameService -> DataAccess: joinGame(username, gameID, clientColor)
DataAccess -> db: UPDATE games SET teamColor = clientColor WHERE gameID = gameID
DataAccess --> JoinGameService: success
JoinGameService --> Server: success
Server --> Client: 200\n{message: "Joined game"}
end

group #gray Clear application #white
Client -> Server: [DELETE] /db
Server -> ClearService: clearAll()
ClearService -> DataAccess: clearDatabase()
DataAccess -> db: DELETE FROM user; DELETE FROM auth; DELETE FROM games;
DataAccess --> ClearService: success
ClearService --> Server: success
Server --> Client: 200\n{message: "Application cleared"}
end
